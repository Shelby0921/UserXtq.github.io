<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于Springboot使用阿里云短信服务]]></title>
    <url>%2F2019%2F02%2F06%2F%E5%85%B3%E4%BA%8ESpringboot%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E7%9F%AD%E4%BF%A1%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[你好，本人谢天启!对于万年不更新的我，终于有勇气更新了！对于该教程前提得先有个阿里云账号，并且开通了短信服务，同时创建模板通过审核,不懂没关系上度娘！！！废话不多说，接着我们直接进入正题,首先我们先引入阿里云的短信服务的SDK(注意：本人使用的SpringBoot版本为1.5.18)12345678910&lt;dependency&gt; &lt;groupId&gt;com.aliyun&lt;/groupId&gt; &lt;artifactId&gt;aliyun-java-sdk-core&lt;/artifactId&gt; &lt;version&gt;4.0.6&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;com.aliyun&lt;/groupId&gt; &lt;artifactId&gt;aliyun-java-sdk-dysmsapi&lt;/artifactId&gt; &lt;version&gt;1.1.0&lt;/version&gt;&lt;/dependency&gt; 接着我们来做第二件事编写一个关于短信服务的配置类1234567891011121314151617public class StaticPeram &#123; // 设置超时时间-可自行调整 final static String defaultConnectTimeout = &quot;sun.net.client.defaultConnectTimeout&quot;; final static String defaultReadTimeout = &quot;sun.net.client.defaultReadTimeout&quot;; final static String Timeout = &quot;10000&quot;; // 初始化ascClient需要的几个参数 final static String product = &quot;Dysmsapi&quot;;// 短信API产品名称（短信产品名固定，无需修改） final static String domain = &quot;dysmsapi.aliyuncs.com&quot;;// 短信API产品域名（接口地址固定，无需修改） // 替换成你的AK (产品密) final static String accessKeyId = &quot;LTAINuDTqeMwD09h&quot;;// 你的accessKeyId,填你自己的 上文配置所得 自行配置 final static String accessKeySecret = &quot;2cCKQm2NFTytpISgmdwbuTORjjCNT7&quot;;// 你的accessKeySecret,填你自己的 上文配置所得 自行配置 // 必填:短信签名-可在短信控制台中找到 final static String SignName = &quot;谢天启&quot;; // 阿里云配置你自己的短信签名填入 // 必填:短信模板-可在短信控制台中找到 // 阿里云配置你自己的短信模板填入 final static String TemplateCode_inset = &quot;&quot;;&#125; 接着编写测试类以及运行配置类123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113import com.aliyuncs.DefaultAcsClient;import com.aliyuncs.IAcsClient;import com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest;import com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse;import com.aliyuncs.exceptions.ClientException;import com.aliyuncs.exceptions.ServerException;import com.aliyuncs.http.MethodType;import com.aliyuncs.profile.DefaultProfile;import com.aliyuncs.profile.IClientProfile;public class PhoneCode &#123; public static void main(String[] args) &#123; String phone = &quot;&quot;; // 此处可输入你的手机号码进行测试 getPhonemsg(phone, vcode()); &#125; /** * 阿里云短信服务配置 * * @param mobile * @return */ private static String getPhonemsg(String mobile, String code) &#123; /** * 进行正则关系校验 */ System.out.println(mobile); if (mobile == null || mobile == &quot;&quot;) &#123; System.out.println(&quot;手机号为空&quot;); return &quot;&quot;; &#125; /** * 短信验证---阿里大于工具 */ // 设置超时时间-可自行调整 System.setProperty(StaticPeram.defaultConnectTimeout, StaticPeram.Timeout); System.setProperty(StaticPeram.defaultReadTimeout, StaticPeram.Timeout); // 初始化ascClient需要的几个参数 final String product = StaticPeram.product;// 短信API产品名称（短信产品名固定，无需修改） final String domain = StaticPeram.domain;// 短信API产品域名（接口地址固定，无需修改） // 替换成你的AK final String accessKeyId = StaticPeram.accessKeyId;// 你的accessKeyId,参考本文档步骤2 final String accessKeySecret = StaticPeram.accessKeySecret;// 你的accessKeySecret，参考本文档步骤2 // 初始化ascClient,暂时不支持多region IClientProfile profile = DefaultProfile.getProfile(&quot;cn-hangzhou&quot;, accessKeyId, accessKeySecret); try &#123; DefaultProfile.addEndpoint(&quot;cn-hangzhou&quot;, &quot;cn-hangzhou&quot;, product, domain); &#125; catch (ClientException e1) &#123; e1.printStackTrace(); &#125; IAcsClient acsClient = new DefaultAcsClient(profile); // 组装请求对象 SendSmsRequest request = new SendSmsRequest(); // 使用post提交 request.setMethod(MethodType.POST); // 必填:待发送手机号。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式 request.setPhoneNumbers(mobile); // 必填:短信签名-可在短信控制台中找到 request.setSignName(StaticPeram.SignName); // 必填:短信模板-可在短信控制台中找到 request.setTemplateCode(StaticPeram.TemplateCode); // 可选:模板中的变量替换JSON串,如模板内容为&quot;亲爱的$&#123;name&#125;,您的验证码为$&#123;code&#125;&quot;时,此处的值为 // 友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含\r\n的情况在JSON中需要表示成\\r\\n,否则会导致JSON在服务端解析失败 request.setTemplateParam(&quot;&#123;\&quot;code\&quot;:\&quot;&quot; + code + &quot;\&quot;&#125;&quot;); // 可选-上行短信扩展码(无特殊需求用户请忽略此字段) // request.setSmsUpExtendCode(&quot;90997&quot;); // 可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者 // request.setOutId(&quot;yourOutId&quot;); // 请求失败这里会抛ClientException异常 SendSmsResponse sendSmsResponse; try &#123; sendSmsResponse = acsClient.getAcsResponse(request); if (sendSmsResponse.getCode() != null &amp;&amp; sendSmsResponse.getCode().equals(&quot;OK&quot;)) &#123; // 请求成功 System.out.println(&quot;获取验证码成功！！！&quot;); return &quot;true&quot;; &#125; else &#123; // 如果验证码出错，会输出错误码告诉你具体原因 System.out.println(sendSmsResponse.getCode()); System.out.println(&quot;获取验证码失败...&quot;); return &quot;false&quot;; &#125; &#125; catch (ServerException e) &#123; e.printStackTrace(); return &quot;由于系统维护，暂时无法注册！！！&quot;; &#125; catch (ClientException e) &#123; e.printStackTrace(); return &quot;由于系统维护，暂时无法注册！！！&quot;; &#125; &#125; /** * 生成6位随机数验证码 * * @return */ public static String vcode() &#123; String vcode = &quot;&quot;; for (int i = 0; i &lt; 6; i++) &#123; vcode = vcode + (int) (Math.random() * 9); &#125; return vcode; &#125;&#125; 对于该教程我不认为我是最好的，但是我觉得自己用的比较合适。如果你觉得你有更好的方法，也可评论！谢谢！！！]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
      <tags>
        <tag>短信服务</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇文章]]></title>
    <url>%2F2019%2F01%2F01%2F%E7%AC%AC%E4%B8%80%E7%AF%87hexo%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[这是我的第一篇hexo文章。本人小白得到大佬指导与认可，谢谢！如果道是完美的，那么操作系统就是完美的；如果操作系统是完美的，那么编译器就是完美的；如果编译嚣是完美的，那么应用程序就是完美的；所以用户心满意足，整个世界因此和谐。 本人小白一个，望各位大佬给予支持和指导，谢谢！]]></content>
  </entry>
</search>
